% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mx_metafit.R
\name{mx_metafit}
\alias{mx_metafit}
\title{Fit Mixture Distribution to Data and Evaluate Results}
\usage{
mx_metafit(breaks, counts, parms, save.data = TRUE, ...)
}
\arguments{
\item{breaks}{class boundaries of the data}

\item{counts}{frequency of observations}

\item{parms}{list of initial parameters for the mixture, or a suitable
\code{\link{mxObj}}ect with start parameters}

\item{save.data}{if data should be included in the returned object}

\item{...}{additional arguments passed to \code{\link{mle2}} and \code{\link{optim}}}
}
\description{
Fit Mixture Distribution to Data and Evaluate Results
}
\examples{
## === preparation of data ===

zd <- 6:35
cutoff <- 6.0

counts <- c(155, 0, 8, 12, 17, 35, 37, 66, 42, 39, 13, 4, 4, 8, 19, 36,
  80, 205, 188, 219, 170, 104, 32, 13, 12, 0, 3, 0, 0, 0)

breaks <- c(zd, (max(zd+1))) - cutoff

observations <- unbin(zd, counts) - cutoff

## === quick example ===

(comp <- mx_guess_components(observations, bw=2/3, mincut=0.9))
obj <- mxObj(comp, left="e")

ret <- mx_metafit(breaks, counts, obj)
summary(ret)

## === details ===

comp <- mx_guess_components(observations, bw=2/3, mincut=0.9)
comp # parameters of components in form of a data frame

obj <- mxObj(comp, left="n") ## all components normal
obj <- mxObj(comp, left="e") ## left component exponential (= default)

## base function, needs parms in correct format
ret <-fit_unimix(breaks, counts, parms=pstart(obj), type="enn")

## for more difficult cases, slower
ret <-fit_unimix(breaks, counts, parms=pstart(obj), type="enn",
        method="BFGS",
        control=list(maxit=1000, ndeps=rep(1e-4, length(pstart(obj)))))

## higher level function, determines type from start parameters
ret <- mx_metafit(breaks, counts, obj)

## --- evaluation of results --
coef(ret)         # top-level mxObj-object, contains all weights
coef(ret@fit)     # included mle2-object, last weight missing (sums up to 1.0)

summary(ret)      # from bbe::mle

AIC(ret)
logLik(ret)
vcov(ret)          # covariance matrix

cov2cor(vcov(ret)) # correlation matrix

}
